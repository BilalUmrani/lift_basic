<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lift.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BgiADAKglwDoJQByCIABAiCDAOglAHoJgBwCYIAAyCAAegmAXgIghwAYIAAyCIBeAqCXAMghAAYIgAwC
        oJcA6CUAcgiAAQIggwDoJQB6CYAcAmCAAMggAHoJgF4CIIcAGCAAMgiAXgKglwDIIQAGCIAMAqCXAOgl
        AHIIgAECIIMA6CUAegmAHAJggADIIAB6CYBeAiCHABggADIIgF4CoJcAyCEABgiADAKglwDoJQByCIAB
        AiCDAOglAHoJgBwCYIAAyCAAegmAXgIghwAYIAAyCIBeAqCXAMghAAYIgAwCoJcA6CUAcgiAAQIggwDo
        JQB6CYAcAmCAAMggAHoJgF4CIIcAGCAAMgiAXgKglwDIIQAGCIAMAqCXAOglAHIIgAECIIMA6CUAegmA
        HAJggADIIAB6CYBeAiCHABggADIIgF4CoJcAyCEABgiADAKglwDoJQByCIABAiCDAOglAHoJgBwCYIAA
        yCAAegmAXgIghwAYIAAyCIBeAqCXAMghAAYIgAwCoJcA6CUAcgiAAQIggwDoJQB6CYAcAmCAAMggAHoJ
        gF4CIIcAGCAAMgiAXgKglwDIIQAGCIAMAqCXAOglAHIIgAECIIMA6CUAegmAHAJggADIIAB6CYBeAiCH
        ABggADIIgF4CoJcAyCEABgiADAKglwDoJQByCIABAiCDAOglAHoJgBwCYIAAyCAAegmAXgIghwAYIAAy
        CIBeAqCXAMghAAYIgAwCoJcA6CUAcgiAAQIggwDoJQB6CYAcAmCAAMggAHoJgF4CIIcAGCAAMgiAXgKg
        lwDIIQAGCIAMAqCXAOglAHIIgAECIIMA6CUAegmAHAJggADIIAB6CYBeAiCHABggADIIgF4CoJcAyCEA
        BgiADAKglwDoJQByCIABAiCDAOglAHoJgBwCYIAAyCAAegmAXgIghwAYIAAyCIBeAqCXAMghAAYIgAwC
        oJcA6CUAcgiAAQIggwDoJQB6CYAcAmCAAMggAHoJgF4CIIcAGCAAMgiAXgKglwDIIQAGCIAMAqCXAOgl
        AHIIgAECIIMA6CUAegmAHAJggADIIAB6CYBeAiCHABggADIIgF4CoJcAyCEABgiADAKglwDoJQByCIAB
        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
</value>
  </data>
</root>